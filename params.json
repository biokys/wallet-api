{"name":"Wallet API","tagline":"Description of REST API","body":"## Basic info\r\n\r\n### Date&time\r\n> All timestamps are returned in ISO 8601 format:\r\n```\r\nYYYY-MM-DDTHH:MM:SSZ\r\n```\r\n\r\n### Limits\r\n> Requests are limited by count per particular time. Information about those limits can be found in request's header:\r\n```\r\nX-RateLimit-Remaining: 98\r\nX-RateLimit-Limit: 100\r\n``` \r\nWhen you reach the requests call limit you will see:\r\n```\r\nHTTP/1.1 429 Client Error (429)\r\n```\r\n\r\n### Http codes\r\n\r\n|Http code| Description       |\r\n|---------|-------------------|\r\n|200      | Everything is ok  |\r\n|403      | Forbidden, authorization failed|\r\n|400      | Bad request, user passed wrong input data|\r\n|404      | Url not found     |\r\n|429      | Too many requests |\r\n|500      | Internal error    |\r\n\r\n\r\n## Obtaining a token\r\nSign-in to [Wallet web app](http://walletapp.net), go to User profile -> Auth token section. Here you can generate your **token**\r\n\r\n### Manual token manipulation (have to be signed-in):\r\nGet token at https://www.walletapp.net/auth-token\r\n\r\nCreate token at https://www.walletapp.net/auth-token/create\r\n\r\nDelete token at https://www.walletapp.net/auth-token/delete\r\n\r\n**Caution! Keep your token in secret. Everyone having your token could possibly change your data!**\r\n\r\n## Authorization\r\nThere are two ways how to handle authorization.\r\n\r\n> Pass auth token as url param **auth**.\r\n```\r\ncurl https://www.walletapp.net/api/v1/users?auth=TOKEN\r\n```\r\n\r\n> By using BASIC authentication (user = auth, pass = TOKEN).\r\n```\r\ncurl -u auth:TOKEN https://www.walletapp.net/api/v1/users\r\n```\r\n\r\nWhen the authorization fail, you will get following http code\r\n```\r\nHTTP/1.1 403 Forbidden\r\n```\r\n## Users\r\n\r\n### Retrieves users\r\n```\r\nGET /api/v1/users\r\n```\r\n\r\n**Response**\r\n```json\r\n[{\r\n    \"birth_year\": 1900,\r\n    \"email\": \"muller10@gmail.com\",\r\n    \"payment_plan\": \"INDIVIDUAL\",\r\n    \"payment_period\": \"y\",\r\n    \"licence_type\": \"paymill\",\r\n    \"affiliate_id\": \"none\",\r\n    \"last_web_access_at\": \"2014-04-17T09:52:02.939Z\",\r\n    \"last_sync_at\": \"2014-02-17T11:22:03.129Z\",\r\n    \"created_at\": \"2014-01-12T13:28:39.279Z\",\r\n    \"modified_at\": \"2014-04-25T19:50:18.878Z\",\r\n    \"id\": \"7e7e7387-fda1-4594-8dd0-9f1726113c45\"\r\n}]\r\n```\r\n\r\n## Accounts\r\n\r\n### Retrieves all accounts\r\n\r\n**Request**\r\n``` \r\nGET /api/v1/user/:user_id/accounts\r\n```\r\n\r\n**Response**\r\n```json\r\n[{\r\n    \"user_id\": \"7e7e7387-fda1-4594-8dd0-9f1726113c45\",\r\n    \"name\": \"My personal account\",\r\n    \"gps\": true,\r\n    \"init_amount\": 0,\r\n    \"order\": 0,\r\n    \"created_at\": \"2014-01-12T13:28:39.279Z\",\r\n    \"modified_at\": \"2014-04-25T19:50:18.878Z\",\r\n    \"id\": \"a48e9fca-1a21-48ae-8664-54f54db1f8a0\"\r\n}]\r\n```\r\n\r\n### ~~Save/create new account~~\r\n```\r\nPOST api/v1/user/:user_id/account/:account_id\r\n```\r\n\r\n### ~~Delete an account~~\r\n```\r\nDELETE api/v1/user/:user_id/account/:account_id\r\n```\r\n\r\n## Categories\r\n\r\n### Retrieves all user's categories\r\n```\r\nGET /api/v1/user/:user_id/categories\r\n```\r\n\r\n**Response**\r\n```json\r\n[{\r\n    \"user_id\": \"7e7e7387-fda1-4594-8dd0-9f1726113c45\",\r\n    \"name\": \"Car\",\r\n    \"color\": \"#8601B0\",\r\n    \"icon_path\": \"ic_cat_0101_car.png\",\r\n    \"icon_id\": 15,\r\n    \"is_system_category\": false,\r\n    \"default_type\": \"expense\",\r\n    \"order\": 4,\r\n    \"created_at\": \"2014-01-12T13:28:39.279Z\",\r\n    \"modified_at\": \"2014-04-25T19:50:18.878Z\",\r\n    \"id\": \"406cfd10-6a3a-4cb3-9c81-6de8e552a681\"\r\n}]\r\n```\r\n\r\n\r\n## Currencies\r\n\r\n### Retrieves all user's currencies\r\n```\r\nGET /api/v1/user/:user_id/currencies\r\n```\r\n\r\n**Response**\r\n```json\r\n[{\r\n    \"user_id\": \"7e7e7387-fda1-4594-8dd0-9f1726113c45\",\r\n    \"rate\": 1,\r\n    \"is_referential\": true,\r\n    \"name\": \"Czech Republic Koruna\",\r\n    \"code\": \"CZK\",\r\n    \"symbol\": \"CZK\",\r\n    \"order\": 0,\r\n    \"created_at\": \"2014-01-12T13:28:39.279Z\",\r\n    \"modified_at\": \"2014-04-25T19:50:18.878Z\",\r\n    \"id\": \"c8e54a22-81f9-4034-acd3-59003f004a29\"\r\n}]\r\n```\r\n\r\n## Hashtags\r\n\r\n### Retrieve all user's hashtags or single hashtag\r\n```\r\nGET /api/v1/user/:user_id/hashtags\r\n```\r\n\r\n```\r\nGET /api/v1/user/:user_id/hashtag/{hashtag_id}\r\n```\r\n\r\n**Response**\r\n```json\r\n{\r\n    \"name\": \"name of hashtag\",\r\n    \"id\": \"867f9c29-7b6e-4b1c-8d39-656cd5befa08\"\r\n}\r\n```\r\n\r\n## Records\r\n\r\n### Retrieves all records in particular account\r\n```\r\nGET /api/v1/user/:user_id/account/:account_id/records\r\n```\r\n\r\n**Response**\r\n```json\r\n[{\r\n    \"account_id\": \"a48e9fca-1a21-48ae-8664-54f54db1f8a0\",\r\n    \"category_id\": \"a43e0592-bb0e-4fb1-b9d4-4899978562bd\",\r\n    \"currency_id\": \"c8e54a22-81f9-4034-acd3-59003f004a29\",\r\n    \"payment_type\": \"cash\",\r\n    \"amount\": 1,\r\n    \"record_type\": \"expense\",\r\n    \"record_date\": \"2014-01-26T19:47:06.203Z\",\r\n    \"note\": \"Holiday in US, ~~hid:b42ef64b-8c91-48e8-af0f-a0db85a2e5b1\",\r\n    \"warranty_in_months\": 12,\r\n    \"gps_latitude\": 40.001312,\r\n    \"gps_longitude\": 12.355275,\r\n    \"gps_accuracy\": 20,\r\n    \"created_at\": \"2014-01-12T13:28:39.279Z\",\r\n    \"modified_at\": \"2014-04-25T19:50:18.878Z\",\r\n    \"id\": \"00ef6be1-2652-43d1-947a-4a8b74460902\"\r\n}]\r\n```\r\n\r\n### Retrieves particular record by record id\r\n```\r\nGET /api/v1/record/:record_id\r\n```\r\n\r\n**Reponse**\r\n```json\r\n{\r\n    \"account\": {\r\n        \"user_id\": \"7e7e7387-fda1-4594-8dd0-9f1726113c45\",\r\n        \"name\": \"My personal account\",\r\n        \"gps\": true,\r\n        \"init_amount\": 0,\r\n        \"order\": 0,\r\n        \"created_at\": \"2014-01-12T13:28:39.279Z\",\r\n        \"modified_at\": \"2014-04-25T19:50:18.878Z\",\r\n        \"id\": \"a48e9fca-1a21-48ae-8664-54f54db1f8a0\"\r\n    },\r\n    \"category\": {\r\n        \"user_id\": \"7e7e7387-fda1-4594-8dd0-9f1726113c45\",\r\n        \"name\": \"Food\",\r\n        \"color\": \"#FF6B6B\",\r\n        \"icon_path\": \"ic_cat_0301_eating_out.png\",\r\n        \"icon_id\": 9,\r\n        \"is_system_category\": false,\r\n        \"default_type\": \"expense\",\r\n        \"order\": 17,\r\n        \"created_at\": \"2014-01-12T13:28:39.279Z\",\r\n        \"modified_at\": \"2014-04-25T19:50:18.878Z\",\r\n        \"id\": \"a43e0592-bb0e-4fb1-b9d4-4899978562bd\"\r\n    },\r\n    \"currency\": {\r\n        \"user_id\": \"7e7e7387-fda1-4594-8dd0-9f1726113c45\",\r\n        \"rate\": 1,\r\n        \"is_referential\": true,\r\n        \"name\": \"Czech Republic Koruna\",\r\n        \"code\": \"CZK\",\r\n        \"symbol\": \"CZK\",\r\n        \"order\": 0,\r\n        \"created_at\": \"2014-01-12T13:28:39.279Z\",\r\n        \"modified_at\": \"2014-04-25T19:50:18.878Z\",\r\n        \"id\": \"c8e54a22-81f9-4034-acd3-59003f004a29\"\r\n    },\r\n    \"payment_type\": \"cash\",\r\n    \"amount\": 1,\r\n    \"record_type\": \"expense\",\r\n    \"record_date\": \"2014-01-26T19:47:06.203Z\",\r\n    \"note\": \"My new car\",\r\n    \"warranty_in_months\": 0,\r\n    \"gps_latitude\": 0,\r\n    \"gps_longitude\": 0,\r\n    \"gps_accuracy\": 0,\r\n    \"created_at\": \"2014-01-12T13:28:39.279Z\",\r\n    \"modified_at\": \"2014-04-25T19:50:18.878Z\",\r\n    \"id\": \"00ef6be1-2652-43d1-947a-4a8b74460902\"\r\n}\r\n```\r\n### Search\r\n```\r\nGET api/v1/search/records?q=query&sort=sorting_attribute&order=[asc|desc]&page=number&per_page=number\r\n```  \r\n\r\n**Url params table**\r\n\r\n|Keyword|Default value|Description|\r\n|-------|-------------|-----------|\r\n|q      | None        |Query for search|\r\n|sort   | date        |Attribute used for sorting. Possible values are: amount, record_date, payment_type, type, warranty, latitude, longitude|\r\n|order  | asc         | asc=Ascending, desc=Descending|\r\n|page   | 1           | page number to retrieve |\r\n|per_page | 20        | items per page | \r\n\r\n**Query table**\r\n\r\n|Keyword|Possible values|Operators|Description|\r\n|-------|---------------|---------|-----------|\r\n|account|account_id     | none    |           |\r\n|category|category_id   | none    |           |\r\n|currency|currency_id   | none    |           |\r\n|payment_type|cash, debit_card, credit_card, transfer, voucher, mobile_payment, web_payment| none | |\r\n|amount  | positive floating number | <, >, <=, >= | |\r\n|type    | income, expense| none | |\r\n|record_date| unix timestamp in UTC | <, >, <=, >= | |\r\n|note | | % | |\r\n|warranty| positive integer| <, >, <=, >= | | \r\n|latitude| real number| <, >, <=, >= | | \r\n|longitude| real number| <, >, <=, >= | | \r\n\r\n\r\n> Following example request searches for record with amount between 2000 exclusive and 10000 inclusive, taking only incomes, payment type is credit card and contains note starting by word Cars\r\n```\r\nhttp://wallet-test.herokuapp.com/api/v1/search/records?page=1&per_page=10&q=payment_type:credit_card+amount:>2000+amount:<=10000+type:income+note:Cars\r\n```\r\n\r\n### Create new record(s)\r\nCreate or update one or more records. When record id is specified, record is updated, otherwise is created. Data has to be sent inside POST request in JSON format specified by table below. \r\n```\r\nPOST /api/v1/user/:user_id/records\r\n```\r\n\r\n**Input (json)**\r\n\r\n|Property       | Mandatory  | Description |\r\n|---------------|------------|-------------|\r\n| **id** | false | Record id (when not specified, new record is created) |\r\n| **account_id** or **account_name**\\* | true | the account |\r\n| **category_id** or **category_name**\\* | true | the category|\r\n| **currency_id** or **currency_code**\\* | true | the currency|\r\n| **amount** | true | must be bigger than 0 |\r\n| **record_type** | true | possible values: income, expense |\r\n| **payment_type** | true | possible values: cash, debit_card, credit_card, transfer, voucher, mobile_payment, web_payment |\r\n| **record_date** | true | ex.: 2014-04-21T15:10:23Z |\r\n| **note** | false | record note |\r\n| **warranty_in_month** | false | the warranty in month. |\r\n| **gps_latitude** | false | the gps latitude |\r\n| **gps_longitude** | false | the gps longitude |\r\n| **gps_accuracy** | false | the accuracy in meters |\r\n\\* *object of this name must exist, otherwise error will be returned*\r\n\r\n**Example**\r\n```json\r\n[{\r\n    \"payment_type\":\"credit_card\", \r\n    \"record_type\":\"income\", \r\n    \"record_date\":\"2014-04-20T20:10:15Z\", \r\n    \"amount\":100, \r\n    \"currency_code\":\"CZK\", \r\n    \"account_name\":\"My personal account\", \r\n    \"category_name\":\"Car\"\r\n}]\r\n```\r\n\r\n**Response**\r\n```json\r\n{\r\n    \"error_objects\":[{\r\n        \"record\":{\r\n            ...received_record_object...\r\n        },\r\n        \"failed_property\":\"<name_of_property>\",\r\n        \"description\":\"<problem_description>\"\r\n    }],\r\n    \"created_object_ids\":[\r\n        \"<id_1>\",\r\n        \"<id_2>\",\r\n        \"<id_3>\"\r\n    ]\r\n}\r\n```\r\n\r\n**Example - successful response**\r\n```json\r\n{\r\n    \"error_objects\":[],\r\n    \"created_object_ids\":[\r\n        \"f25538f2-7d49-4e0c-9bfd-dd67c90be434\"\r\n    ]\r\n}\r\n```\r\n\r\n**Example - failed response (record_type wasn't set)**\r\n```json\r\n{\r\n    \"error_objects\":[{\r\n        \"record\":{\r\n            \"account_name\":\"My personal account\",\r\n            \"category_name\":\"Car\",\r\n            \"currency_code\":\"CZK\",\r\n            \"amount\":100.0,\r\n            \"record_date\":\"2014-04-20T20:10:15Z\",\r\n            \"warranty_in_months\":0,\r\n        },\r\n        \"failed_property\":\"record_type\"\r\n    }],\r\n    \"created_object_ids\":[]\r\n}\r\n```\r\n> When everything is ok, you will receive result object with empty error_objects array and non-empty array created_object_ids filled with ids of created objects in the same order, the objects where received.\r\n\r\n> There is a limit 10.000 objects per minute. ","google":"UA-21672105-8","note":"Don't delete this file! It's used internally to help with page regeneration."}